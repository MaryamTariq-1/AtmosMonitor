{"ast":null,"code":"var _jsxFileName = \"/Users/Rayyan./Desktop/FYP/AtmosMonitor/frontend/src/pages/SignIn/forgetpass.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { sendOtpForPasswordReset, resetPasswordWithOtp } from \"../../api\"; // Ensure these API functions are correctly set up\nimport \"./forgetpass.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ForgotPassword = () => {\n  _s();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [otpSent, setOtpSent] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // Handle OTP request to be sent\n  const handleSendOtp = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const data = await sendOtpForPasswordReset(email); // Ensure backend is set up for this request\n      setMessage(data.message); // Success message from backend\n      setOtpSent(true); // Show OTP form\n      setError(\"\"); // Clear previous errors\n    } catch (error) {\n      setError(error.response ? error.response.data.error : \"Failed to send OTP. Please try again.\");\n      setMessage(\"\"); // Clear any previous success messages\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle password reset with OTP\n  const handleResetPassword = async e => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const data = await resetPasswordWithOtp(email, otp, newPassword); // Reset password using OTP\n      setMessage(data.message); // Show success message\n      setError(\"\"); // Clear previous errors\n      setOtp(\"\"); // Clear OTP input field for security\n      setNewPassword(\"\"); // Clear new password input field\n\n      setTimeout(() => {\n        navigate(\"/signin\"); // Redirect to Sign-In page after successful reset\n      }, 2000);\n    } catch (error) {\n      setError(error.response ? error.response.data.error : \"Failed to reset password. Try again.\");\n      setMessage(\"\"); // Clear any previous success messages\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"forgot-password-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"forgot-password-header\",\n      children: /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navbar\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"navbar-logo\",\n          onClick: () => navigate(\"/\"),\n          children: \"AtmosMonitor\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"forgot-password-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Forgot Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), !otpSent ? /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSendOtp,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Enter your email\",\n          required: true,\n          value: email,\n          onChange: e => setEmail(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? \"Sending OTP...\" : \"Send OTP\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // Form to reset password using OTP\n      _jsxDEV(\"form\", {\n        onSubmit: handleResetPassword,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: otp,\n          placeholder: \"Enter OTP\",\n          required: true,\n          onChange: e => setOtp(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: newPassword,\n          placeholder: \"Enter new password\",\n          required: true,\n          onChange: e => setNewPassword(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? \"Resetting Password...\" : \"Reset Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this), message && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"green\"\n        },\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 21\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        style: {\n          color: \"red\"\n        },\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Remembered your password?\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/signin\",\n          className: \"signin-link\",\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(ForgotPassword, \"DtXJX9YDFkgszFVl0+BO4UvB8B4=\", false, function () {\n  return [useNavigate];\n});\n_c = ForgotPassword;\nexport default ForgotPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"names":["React","useState","useNavigate","sendOtpForPasswordReset","resetPasswordWithOtp","jsxDEV","_jsxDEV","ForgotPassword","_s","navigate","email","setEmail","otp","setOtp","newPassword","setNewPassword","otpSent","setOtpSent","message","setMessage","error","setError","loading","setLoading","handleSendOtp","e","preventDefault","data","response","handleResetPassword","setTimeout","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","required","value","onChange","target","disabled","style","color","href","_c","$RefreshReg$"],"sources":["/Users/Rayyan./Desktop/FYP/AtmosMonitor/frontend/src/pages/SignIn/forgetpass.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { sendOtpForPasswordReset, resetPasswordWithOtp } from \"../../api\"; // Ensure these API functions are correctly set up\nimport \"./forgetpass.css\";\n\nconst ForgotPassword = () => {\n  const navigate = useNavigate();\n  const [email, setEmail] = useState(\"\");\n  const [otp, setOtp] = useState(\"\");\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [otpSent, setOtpSent] = useState(false);\n  const [message, setMessage] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n\n  // Handle OTP request to be sent\n  const handleSendOtp = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const data = await sendOtpForPasswordReset(email); // Ensure backend is set up for this request\n      setMessage(data.message); // Success message from backend\n      setOtpSent(true); // Show OTP form\n      setError(\"\"); // Clear previous errors\n    } catch (error) {\n      setError(error.response ? error.response.data.error : \"Failed to send OTP. Please try again.\");\n      setMessage(\"\"); // Clear any previous success messages\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Handle password reset with OTP\n  const handleResetPassword = async (e) => {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const data = await resetPasswordWithOtp(email, otp, newPassword); // Reset password using OTP\n      setMessage(data.message); // Show success message\n      setError(\"\"); // Clear previous errors\n      setOtp(\"\"); // Clear OTP input field for security\n      setNewPassword(\"\"); // Clear new password input field\n\n      setTimeout(() => {\n        navigate(\"/signin\"); // Redirect to Sign-In page after successful reset\n      }, 2000);\n    } catch (error) {\n      setError(error.response ? error.response.data.error : \"Failed to reset password. Try again.\");\n      setMessage(\"\"); // Clear any previous success messages\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"forgot-password-page\">\n      <header className=\"forgot-password-header\">\n        <nav className=\"navbar\">\n          <div className=\"navbar-logo\" onClick={() => navigate(\"/\")}>\n            AtmosMonitor\n          </div>\n        </nav>\n      </header>\n      <div className=\"forgot-password-container\">\n        <h2>Forgot Password</h2>\n\n        {/* Form to send OTP */}\n        {!otpSent ? (\n          <form onSubmit={handleSendOtp}>\n            <input\n              type=\"email\"\n              placeholder=\"Enter your email\"\n              required\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <button type=\"submit\" disabled={loading}>\n              {loading ? \"Sending OTP...\" : \"Send OTP\"}\n            </button>\n          </form>\n        ) : (\n          // Form to reset password using OTP\n          <form onSubmit={handleResetPassword}>\n            <input\n              type=\"text\"\n              value={otp}\n              placeholder=\"Enter OTP\"\n              required\n              onChange={(e) => setOtp(e.target.value)}\n            />\n            <input\n              type=\"password\"\n              value={newPassword}\n              placeholder=\"Enter new password\"\n              required\n              onChange={(e) => setNewPassword(e.target.value)}\n            />\n            <button type=\"submit\" disabled={loading}>\n              {loading ? \"Resetting Password...\" : \"Reset Password\"}\n            </button>\n          </form>\n        )}\n\n        {message && <p style={{ color: \"green\" }}>{message}</p>}\n        {error && <p style={{ color: \"red\" }}>{error}</p>}\n\n        <p>\n          Remembered your password?{\" \"}\n          <a href=\"/signin\" className=\"signin-link\">\n            Sign In\n          </a>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default ForgotPassword;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}