{"ast":null,"code":"var _jsxFileName = \"/Users/Rayyan./Desktop/FYP/AtmosMonitor/frontend/src/pages/Subscription/SubPlan.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './SubPlan.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst SubPlan = () => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedPlan, setSelectedPlan] = useState(null);\n  const plans = [{\n    id: 1,\n    name: '7-Day Free Trial',\n    description: 'Enjoy the premium features for 7 days, completely free!',\n    price: '$0.00',\n    duration: '7 days'\n  }, {\n    id: 2,\n    name: 'Monthly Plan',\n    description: 'Get access to premium features for one month.',\n    price: '$10.00',\n    duration: '1 month'\n  }, {\n    id: 3,\n    name: 'Yearly Plan',\n    description: 'Get access to premium features for one full year.',\n    price: '$100.00',\n    duration: '1 year'\n  }];\n\n  //   const handleBuySubscription = (planId) => {\n  //     setSelectedPlan(planId);\n  //     // Navigate to the checkout page where payment method is selected\n  //     navigate('/checkout');\n  //   };\n\n  const handleBuySubscription = planId => {\n    const plan = plans.find(p => p.id === planId); // Find the selected plan based on ID\n    setSelectedPlan(plan); // Store the selected plan in the state\n    navigate(\"/checkout\", {\n      state: {\n        selectedPlan: plan\n      }\n    }); // Pass the selected plan data to Checkout page using state\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"subscription-header\",\n      children: \"Choose Your Subscription Plan\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"subscription-container\",\n      children: plans.map(plan => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"plan-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: plan.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: plan.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: plan.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBuySubscription(plan.id),\n          children: \"Buy Subscription\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this)]\n      }, plan.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(SubPlan, \"RsQxlKg+VGMIi61Rbq3qd351gf8=\", false, function () {\n  return [useNavigate];\n});\n_c = SubPlan;\nexport default SubPlan;\nvar _c;\n$RefreshReg$(_c, \"SubPlan\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","Fragment","_Fragment","SubPlan","_s","navigate","selectedPlan","setSelectedPlan","plans","id","name","description","price","duration","handleBuySubscription","planId","plan","find","p","state","children","className","fileName","_jsxFileName","lineNumber","columnNumber","map","onClick","_c","$RefreshReg$"],"sources":["/Users/Rayyan./Desktop/FYP/AtmosMonitor/frontend/src/pages/Subscription/SubPlan.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport './SubPlan.css';\n\nconst SubPlan = () => {\n  const navigate = useNavigate();\n  \n  const [selectedPlan, setSelectedPlan] = useState(null);\n\n  const plans = [\n    {\n      id: 1,\n      name: '7-Day Free Trial',\n      description: 'Enjoy the premium features for 7 days, completely free!',\n      price: '$0.00',\n      duration: '7 days',\n    },\n    {\n      id: 2,\n      name: 'Monthly Plan',\n      description: 'Get access to premium features for one month.',\n      price: '$10.00',\n      duration: '1 month',\n    },\n    {\n      id: 3,\n      name: 'Yearly Plan',\n      description: 'Get access to premium features for one full year.',\n      price: '$100.00',\n      duration: '1 year',\n    }\n  ];\n\n//   const handleBuySubscription = (planId) => {\n//     setSelectedPlan(planId);\n//     // Navigate to the checkout page where payment method is selected\n//     navigate('/checkout');\n//   };\n\n    \n    const handleBuySubscription = (planId) => {\n      const plan = plans.find((p) => p.id === planId); // Find the selected plan based on ID\n      setSelectedPlan(plan); // Store the selected plan in the state\n      navigate(\"/checkout\", { state: { selectedPlan: plan } }); // Pass the selected plan data to Checkout page using state\n    };\n\n  return (\n    <>\n      <h2 className=\"subscription-header\">Choose Your Subscription Plan</h2>\n      <div className=\"subscription-container\">\n        {plans.map((plan) => (\n          <div key={plan.id} className=\"plan-card\">\n            <h3>{plan.name}</h3>\n            <p>{plan.description}</p>\n            <h4>{plan.price}</h4>\n            <button onClick={() => handleBuySubscription(plan.id)}>\n              Buy Subscription\n            </button>\n          </div>\n        ))}\n      </div>\n    </>\n  );\n};\n\nexport default SubPlan;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}