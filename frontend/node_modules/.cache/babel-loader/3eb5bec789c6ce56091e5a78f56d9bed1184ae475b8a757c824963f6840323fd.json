{"ast":null,"code":"var _jsxFileName = \"/Users/Rayyan./Desktop/FYP/AtmosMonitor/frontend/src/pages/Subscription/Checkout.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport { Elements, useStripe, useElements, CardElement } from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport axios from \"axios\";\nimport \"./Checkout.css\";\n\n// Initialize Stripe with your public key\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst stripePromise = loadStripe(\"pk_test_51NdsQCEBmpPY3F1SVvoq27xazI7MPxe38i9q9otPfxTR61SRhYaUZHvDjxnvWl8VuriA1QFiQVkqKGitEzYcR2Ha00yiiOOlzY\");\nconst Checkout = () => {\n  _s();\n  const navigate = useNavigate();\n  const stripe = useStripe();\n  const elements = useElements();\n\n  // Retrieve the selected plan data from location.state\n  const location = useLocation();\n  const {\n    selectedPlan\n  } = location.state || {}; // If location.state doesn't exist, fallback to an empty object\n\n  const [selectedPaymentMethod, setSelectedPaymentMethod] = useState(\"Credit Card\");\n  const [cardholderName, setCardholderName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    if (!selectedPlan) {\n      navigate(\"/subscription-plans\"); // Redirect to plans if no plan selected\n    }\n  }, [selectedPlan, navigate]);\n  useEffect(() => {\n    const token = localStorage.getItem(\"jwt_token\");\n    console.log(\"JWT Token:\", token); // Check if the token exists\n\n    if (!token) {\n      alert(\"No token found. Please log in again.\");\n      return;\n    }\n    // Fetch the user's email from the backend when the component mounts\n    const fetchEmail = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:3001/api/user/email\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"jwt_token\")}`\n          }\n        });\n        setEmail(response.data.email);\n        setIsLoading(false);\n      } catch (error) {\n        console.error(\"Error fetching email:\", error);\n        setIsLoading(false);\n      }\n    };\n    fetchEmail();\n  }, []);\n  const handlePaymentMethodChange = e => {\n    setSelectedPaymentMethod(e.target.value);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    if (!stripe || !elements) {\n      return;\n    }\n    const cardElement = elements.getElement(CardElement);\n    const {\n      token,\n      error\n    } = await stripe.createToken(cardElement);\n    if (error) {\n      console.error(\"Payment error:\", error);\n      alert(\"Payment failed: \" + error.message);\n    } else {\n      try {\n        const response = await fetch(\"http://localhost:3001/api/payment-intent\", {\n          method: \"POST\",\n          headers: {\n            \"Content-Type\": \"application/json\"\n          },\n          body: JSON.stringify({\n            token: token.id,\n            cardholderName,\n            email,\n            selectedPlan // Send selected plan data to backend\n          })\n        });\n        const result = await response.json();\n        if (response.ok) {\n          alert(\"Payment successful!\");\n          navigate(\"/\");\n        } else {\n          console.error(\"Payment error:\", result.error);\n          alert(\"Payment failed: \" + result.error);\n        }\n      } catch (err) {\n        console.error(\"Error processing payment:\", err);\n        alert(\"Payment failed.\");\n      }\n    }\n  };\n\n  // Prevent the form from submitting until email is loaded\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"checkout-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"checkout-header\",\n      children: \"Checkout\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"selected-plan-name\",\n      children: selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"plan-description\",\n      children: selectedPlan === null || selectedPlan === void 0 ? void 0 : selectedPlan.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"checkout-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"payment-method\",\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Credit Card\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this), selectedPaymentMethod === \"Credit Card\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"credit-card-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Cardholder Name:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: cardholderName,\n            onChange: e => setCardholderName(e.target.value),\n            required: true,\n            placeholder: \"Enter cardholder's name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Email:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            value: email,\n            onChange: e => setEmail(e.target.value) // Make the field editable\n            ,\n            placeholder: \"Email from your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"Card Details:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CardElement, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-button\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: !stripe,\n          children: \"Pay Now\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 127,\n    columnNumber: 5\n  }, this);\n};\n_s(Checkout, \"I/0DS6RVJC7lfomV8RDDa4VTvB8=\", false, function () {\n  return [useNavigate, useStripe, useElements, useLocation];\n});\n_c = Checkout;\nconst CheckoutWrapper = () => /*#__PURE__*/_jsxDEV(Elements, {\n  stripe: stripePromise,\n  children: /*#__PURE__*/_jsxDEV(Checkout, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 180,\n  columnNumber: 3\n}, this);\n_c2 = CheckoutWrapper;\nexport default CheckoutWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"Checkout\");\n$RefreshReg$(_c2, \"CheckoutWrapper\");","map":{"version":3,"names":["React","useState","useEffect","useLocation","useNavigate","Elements","useStripe","useElements","CardElement","loadStripe","axios","jsxDEV","_jsxDEV","stripePromise","Checkout","_s","navigate","stripe","elements","location","selectedPlan","state","selectedPaymentMethod","setSelectedPaymentMethod","cardholderName","setCardholderName","email","setEmail","isLoading","setIsLoading","token","localStorage","getItem","console","log","alert","fetchEmail","response","get","headers","Authorization","data","error","handlePaymentMethodChange","e","target","value","handleSubmit","preventDefault","cardElement","getElement","createToken","message","fetch","method","body","JSON","stringify","id","result","json","ok","err","children","fileName","_jsxFileName","lineNumber","columnNumber","className","name","description","onSubmit","type","onChange","required","placeholder","disabled","_c","CheckoutWrapper","_c2","$RefreshReg$"],"sources":["/Users/Rayyan./Desktop/FYP/AtmosMonitor/frontend/src/pages/Subscription/Checkout.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\nimport {\n  Elements,\n  useStripe,\n  useElements,\n  CardElement,\n} from \"@stripe/react-stripe-js\";\nimport { loadStripe } from \"@stripe/stripe-js\";\nimport axios from \"axios\";\nimport \"./Checkout.css\";\n\n// Initialize Stripe with your public key\nconst stripePromise = loadStripe(\n  \"pk_test_51NdsQCEBmpPY3F1SVvoq27xazI7MPxe38i9q9otPfxTR61SRhYaUZHvDjxnvWl8VuriA1QFiQVkqKGitEzYcR2Ha00yiiOOlzY\"\n);\n\nconst Checkout = () => {\n  const navigate = useNavigate();\n  const stripe = useStripe();\n  const elements = useElements();\n\n  // Retrieve the selected plan data from location.state\n  const location = useLocation();\n  const { selectedPlan } = location.state || {}; // If location.state doesn't exist, fallback to an empty object\n\n  const [selectedPaymentMethod, setSelectedPaymentMethod] =\n    useState(\"Credit Card\");\n  const [cardholderName, setCardholderName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (!selectedPlan) {\n      navigate(\"/subscription-plans\"); // Redirect to plans if no plan selected\n    }\n  }, [selectedPlan, navigate]);\n\n\n\n    \n    useEffect(() => {\n      \n            const token = localStorage.getItem(\"jwt_token\");\n            console.log(\"JWT Token:\", token); // Check if the token exists\n\n            if (!token) {\n              alert(\"No token found. Please log in again.\");\n              return;\n            }\n    // Fetch the user's email from the backend when the component mounts\nconst fetchEmail = async () => {\n  try {\n    const response = await axios.get(\"http://localhost:3001/api/user/email\", {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"jwt_token\")}`,\n      },\n    });\n    setEmail(response.data.email);\n    setIsLoading(false);\n  } catch (error) {\n    console.error(\"Error fetching email:\", error);\n    setIsLoading(false);\n  }\n};\n\n    fetchEmail();\n  }, []);\n\n  const handlePaymentMethodChange = (e) => {\n    setSelectedPaymentMethod(e.target.value);\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    if (!stripe || !elements) {\n      return;\n    }\n\n    const cardElement = elements.getElement(CardElement);\n    const { token, error } = await stripe.createToken(cardElement);\n\n    if (error) {\n      console.error(\"Payment error:\", error);\n      alert(\"Payment failed: \" + error.message);\n    } else {\n      try {\n        const response = await fetch(\n          \"http://localhost:3001/api/payment-intent\",\n          {\n            method: \"POST\",\n            headers: {\n              \"Content-Type\": \"application/json\",\n            },\n            body: JSON.stringify({\n              token: token.id,\n              cardholderName,\n              email,\n              selectedPlan, // Send selected plan data to backend\n            }),\n          }\n        );\n\n        const result = await response.json();\n\n        if (response.ok) {\n          alert(\"Payment successful!\");\n          navigate(\"/\");\n        } else {\n          console.error(\"Payment error:\", result.error);\n          alert(\"Payment failed: \" + result.error);\n        }\n      } catch (err) {\n        console.error(\"Error processing payment:\", err);\n        alert(\"Payment failed.\");\n      }\n    }\n  };\n\n  // Prevent the form from submitting until email is loaded\n  if (isLoading) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <div className=\"checkout-container\">\n      <h2 className=\"checkout-header\">Checkout</h2>\n      <h3 className=\"selected-plan-name\">{selectedPlan?.name}</h3>\n      <p className=\"plan-description\">{selectedPlan?.description}</p>\n      <form onSubmit={handleSubmit} className=\"checkout-form\">\n        <div className=\"payment-method\">\n          <label>\n            Credit Card\n          </label>\n        </div>\n\n        {selectedPaymentMethod === \"Credit Card\" && (\n          <div className=\"credit-card-details\">\n            <div className=\"input-group\">\n              <label>Cardholder Name:</label>\n              <input\n                type=\"text\"\n                value={cardholderName}\n                onChange={(e) => setCardholderName(e.target.value)}\n                required\n                placeholder=\"Enter cardholder's name\"\n              />\n            </div>\n\n            <div className=\"input-group\">\n              <label>Email:</label>\n              {/* Display the email, but prevent editing */}\n              <input\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)} // Make the field editable\n                placeholder=\"Email from your account\"\n              />\n            </div>\n\n            <div className=\"input-group\">\n              <label>Card Details:</label>\n              <CardElement />\n            </div>\n          </div>\n        )}\n\n        <div className=\"submit-button\">\n          <button type=\"submit\" disabled={!stripe}>\n            Pay Now\n          </button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nconst CheckoutWrapper = () => (\n  <Elements stripe={stripePromise}>\n    <Checkout />\n  </Elements>\n);\n\nexport default CheckoutWrapper;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}