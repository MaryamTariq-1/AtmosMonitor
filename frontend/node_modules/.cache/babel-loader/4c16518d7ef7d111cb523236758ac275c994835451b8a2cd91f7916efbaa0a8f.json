{"ast":null,"code":"import axiosInstance from \"./utils/axios\";\n\n// API call for sign-in (login)\nexport const login = async (email, password) => {\n  try {\n    const response = await axiosInstance.post(\"/auth/signin\", {\n      email,\n      password\n    });\n    return response.data; // Return the response data from the backend\n  } catch (error) {\n    throw error.response ? error.response.data : \"An error occurred while logging in\";\n  }\n};\n\n// API call for sign-up (register)\nexport const signup = async (name, email, password) => {\n  try {\n    const response = await axiosInstance.post(\"/auth/signup\", {\n      name,\n      email,\n      password\n    });\n    return response.data; // Return the response data from the backend\n  } catch (error) {\n    throw error.response ? error.response.data : \"An error occurred during sign-up\";\n  }\n};\n\n// API call for sending OTP for password reset\nexport const sendOtpForPasswordReset = async email => {\n  try {\n    const response = await axiosInstance.post(\"/auth/forgot-password\", {\n      email\n    });\n    return response.data; // Return the success message for OTP request\n  } catch (error) {\n    throw error.response ? error.response.data : \"An error occurred while sending OTP\";\n  }\n};\n\n// API call to verify OTP for password reset\nexport const verifyOtpForPasswordReset = async (email, otp) => {\n  try {\n    const response = await axiosInstance.post(\"/auth/verify-otp\", {\n      email,\n      otpEntered: otp\n    });\n    return response.data; // Return the success message after OTP verification\n  } catch (error) {\n    throw error.response ? error.response.data : \"An error occurred while verifying OTP\";\n  }\n};\n\n// API call to reset the password after OTP verification\nexport const resetPasswordWithOtp = async (email, newPassword) => {\n  try {\n    const response = await axiosInstance.post(\"/auth/reset-password\", {\n      email,\n      newPassword\n    });\n    return response.data; // Return the success message after password reset\n  } catch (error) {\n    throw error.response ? error.response.data : \"An error occurred while resetting the password\";\n  }\n};\n\n// API call to verify OTP for login\nexport const verifyOtp = async (email, otp) => {\n  try {\n    const response = await axiosInstance.post(\"/auth/verify-otp\", {\n      email,\n      otpEntered: otp\n    });\n    return response.data; // Return the success message after OTP verification\n  } catch (error) {\n    throw error.response ? error.response.data : \"An error occurred while verifying OTP\";\n  }\n};","map":{"version":3,"names":["axiosInstance","login","email","password","response","post","data","error","signup","name","sendOtpForPasswordReset","verifyOtpForPasswordReset","otp","otpEntered","resetPasswordWithOtp","newPassword","verifyOtp"],"sources":["/Users/Rayyan./Desktop/FYP/AtmosMonitor/frontend/src/api.js"],"sourcesContent":["import axiosInstance from \"./utils/axios\";\n\n// API call for sign-in (login)\nexport const login = async (email, password) => {\n  try {\n    const response = await axiosInstance.post(\"/auth/signin\", { email, password });\n    return response.data; // Return the response data from the backend\n  } catch (error) {\n    throw error.response ? error.response.data : \"An error occurred while logging in\";\n  }\n};\n\n// API call for sign-up (register)\nexport const signup = async (name, email, password) => {\n  try {\n    const response = await axiosInstance.post(\"/auth/signup\", { name, email, password });\n    return response.data; // Return the response data from the backend\n  } catch (error) {\n    throw error.response ? error.response.data : \"An error occurred during sign-up\";\n  }\n};\n\n// API call for sending OTP for password reset\nexport const sendOtpForPasswordReset = async (email) => {\n  try {\n    const response = await axiosInstance.post(\"/auth/forgot-password\", { email });\n    return response.data; // Return the success message for OTP request\n  } catch (error) {\n    throw error.response ? error.response.data : \"An error occurred while sending OTP\";\n  }\n};\n\n// API call to verify OTP for password reset\nexport const verifyOtpForPasswordReset = async (email, otp) => {\n  try {\n    const response = await axiosInstance.post(\"/auth/verify-otp\", { email, otpEntered: otp });\n    return response.data; // Return the success message after OTP verification\n  } catch (error) {\n    throw error.response ? error.response.data : \"An error occurred while verifying OTP\";\n  }\n};\n\n// API call to reset the password after OTP verification\nexport const resetPasswordWithOtp = async (email, newPassword) => {\n  try {\n    const response = await axiosInstance.post(\"/auth/reset-password\", { email, newPassword });\n    return response.data; // Return the success message after password reset\n  } catch (error) {\n    throw error.response ? error.response.data : \"An error occurred while resetting the password\";\n  }\n};\n\n// API call to verify OTP for login\nexport const verifyOtp = async (email, otp) => {\n  try {\n    const response = await axiosInstance.post(\"/auth/verify-otp\", { email, otpEntered: otp });\n    return response.data; // Return the success message after OTP verification\n  } catch (error) {\n    throw error.response ? error.response.data : \"An error occurred while verifying OTP\";\n  }\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}