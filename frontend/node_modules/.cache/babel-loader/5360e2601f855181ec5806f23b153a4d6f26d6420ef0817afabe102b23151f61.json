{"ast":null,"code":"var _jsxFileName = \"/Users/Rayyan./Desktop/FYP/AtmosMonitor/frontend/src/pages/Dashboard/dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\"; // Correct import for useEffect\nimport { useNavigate } from \"react-router-dom\"; // Correct import for useNavigate\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Plot from \"react-plotly.js\"; // Correct import statement\nimport { faHouse, faDesktop, faBell, faChartColumn, faMapLocationDot, faHeartPulse, faPieChart, faChartBar, faTachometerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./dashboard.css\";\nimport GaugeChart from \"react-gauge-chart\";\nimport { PieChart, Pie, BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer, Cell } from \"recharts\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet.heat\"; // Import leaflet.heat plugin\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass HeatMap extends React.Component {\n  componentDidMount() {\n    this.map = L.map(\"heatmap\").setView([30.7628, 72.9297], 10);\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      maxZoom: 19\n    }).addTo(this.map);\n    fetch(\"/aqidata.json\").then(response => response.json()).then(data => {\n      if (!data || !Array.isArray(data.features)) {\n        throw new Error(\"Invalid data structure\");\n      }\n      const aqiData = [];\n      data.features.forEach(feature => {\n        const {\n          AQI,\n          lat,\n          long\n        } = feature.attributes;\n        const getIntensity = aqi => {\n          if (aqi <= 224.890014) return 0.6;\n          if (aqi <= 226.57779) return 0.8;\n          return 1.0;\n        };\n        aqiData.push([lat, long, getIntensity(AQI)]);\n      });\n      L.heatLayer(aqiData, {\n        radius: 25,\n        blur: 15,\n        maxZoom: 13,\n        gradient: {\n          0.4: \"blue\",\n          0.6: \"lime\",\n          0.7: \"yellow\",\n          0.8: \"orange\",\n          1.0: \"red\"\n        }\n      }).addTo(this.map);\n    }).catch(error => {\n      console.error(\"Error loading AQI data:\", error);\n    });\n  }\n  componentWillUnmount() {\n    if (this.map) {\n      this.map.remove();\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"heatmap\",\n      style: {\n        width: \"100%\",\n        height: \"400px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 12\n    }, this);\n  }\n}\nfunction Dashboard() {\n  _s();\n  const navigate = useNavigate();\n  const [longitude, setLongitude] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n  const [predictedAqi, setPredictedAqi] = useState(\"N/A\");\n  const [jsonData, setJsonData] = useState(null);\n  const [locations, setLocations] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [healthRecommendation, setHealthRecommendation] = useState(\"\");\n  useEffect(() => {\n    fetch(\"csvjson.json\").then(response => response.json()).then(data => {\n      setJsonData(data);\n      const uniqueLocations = [...new Set(data.map(record => record.Location))];\n      setLocations(uniqueLocations);\n      setSelectedLocation(uniqueLocations[0]); // Set default location\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  const handleLocationChange = event => {\n    const newLocation = event.target.value;\n    setSelectedLocation(newLocation);\n    const queryParams = new URLSearchParams(window.location.search);\n    queryParams.set(\"location\", newLocation);\n    const newUrl = `${window.location.pathname}?${queryParams.toString()}`;\n    window.history.pushState({\n      path: newUrl\n    }, \"\", newUrl);\n  };\n  useEffect(() => {\n    if (jsonData && selectedLocation) {\n      updateCharts(selectedLocation);\n    }\n  }, [selectedLocation, jsonData]);\n  const updateCharts = selectedLocation => {\n    const filteredData = jsonData.filter(record => record.Location === selectedLocation);\n    const timeRange = filteredData.map(record => record.Date);\n    const pm25Data = filteredData.map(record => record[\"PM2.5\"]);\n    const pm10Data = filteredData.map(record => record[\"PM10\"]);\n    const co2Data = filteredData.map(record => record.CO2);\n    const tempData = filteredData.map(record => record.Temperature);\n    const humidData = filteredData.map(record => record.Humidity);\n    setChartsData({\n      timeRange,\n      pm25Data,\n      pm10Data,\n      co2Data,\n      tempData,\n      humidData\n    });\n\n    // Calculate average AQI and generate health recommendation\n    const avgPM25 = (pm25Data.reduce((a, b) => a + b, 0) / pm25Data.length).toFixed(2);\n    const avgPM10 = (pm10Data.reduce((a, b) => a + b, 0) / pm10Data.length).toFixed(2);\n    const avgCO2 = (co2Data.reduce((a, b) => a + b, 0) / co2Data.length).toFixed(2);\n    const averageAQI = Math.max(avgPM25, avgPM10, avgCO2);\n    const recommendation = getHealthRecommendation(averageAQI);\n    setHealthRecommendation(recommendation);\n  };\n  const [chartsData, setChartsData] = useState({\n    timeRange: [],\n    pm25Data: [],\n    pm10Data: [],\n    co2Data: [],\n    tempData: [],\n    humidData: []\n  });\n  const getHealthRecommendation = aqi => {\n    const aqiValue = parseFloat(aqi);\n    if (aqiValue <= 50) return \"Air quality is good. You can go outside.\";\n    if (aqiValue <= 100) return \"Air quality is moderate. Consider limiting outdoor activities.\";\n    if (aqiValue <= 150) return \"Air quality is unhealthy for sensitive groups. Stay indoors if you have respiratory issues.\";\n    if (aqiValue <= 200) return \"Air quality is unhealthy. Limit outdoor exposure.\";\n    if (aqiValue <= 300) return \"Air quality is very unhealthy. Stay indoors and wear a mask if you need to go outside.\";\n    return \"Air quality is hazardous. Stay indoors and avoid outdoor activities.\";\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!longitude || !latitude) {\n      alert(\"Please enter both longitude and latitude.\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/predict?longitude=${longitude}&latitude=${latitude}`, {\n        method: \"GET\",\n        mode: \"cors\"\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.predicted_aqi) {\n          setPredictedAqi(data.predicted_aqi.toFixed(2));\n        } else {\n          setPredictedAqi(\"Error fetching data\");\n        }\n      } else {\n        setPredictedAqi(\"Error fetching data\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"There was an error fetching the AQI prediction. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-logo\",\n        children: \" Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"sidebar-links\",\n        children: /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#home\",\n            onClick: () => navigate(\"/\"),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faHouse\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 15\n            }, this), \" Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"locationDropdown\",\n          children: \"Select Location: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"locationDropdown\",\n          value: selectedLocation || \"\",\n          onChange: handleLocationChange,\n          children: locations.map(location => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: location,\n            children: location\n          }, location, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"stats\",\n        id: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Monitoring Environment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-cards-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-card\",\n            children: \"78 Pollution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-card\",\n            children: \"12 Health\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-card\",\n            children: \"13 Traffic Rush\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-card\",\n            children: \"1 Vehicle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"Recommendations-system\",\n        id: \"Recommendation\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recommendations System \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Prediction\",\n          id: \"Prediction\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Air Quality Index (AQI) Prediction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"longitude\",\n              children: \"Longitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"any\",\n              id: \"longitude\",\n              value: longitude,\n              onChange: e => setLongitude(e.target.value),\n              placeholder: \"Enter Longitude\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"latitude\",\n              children: \"Latitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"any\",\n              id: \"latitude\",\n              value: latitude,\n              onChange: e => setLatitude(e.target.value),\n              placeholder: \"Enter Latitude\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 287,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Get AQI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"result\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Predicted AQI: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: predictedAqi\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 15\n            }, this), healthRecommendation && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"health-recommendation\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Health Recommendation:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                children: healthRecommendation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 270,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 228,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"ISWvwHj3IeOUoP/BCM+qrFMrH+0=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","FontAwesomeIcon","Plot","faHouse","faDesktop","faBell","faChartColumn","faMapLocationDot","faHeartPulse","faPieChart","faChartBar","faTachometerAlt","GaugeChart","PieChart","Pie","BarChart","Bar","CartesianGrid","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","Cell","L","jsxDEV","_jsxDEV","HeatMap","Component","componentDidMount","map","setView","tileLayer","maxZoom","addTo","fetch","then","response","json","data","Array","isArray","features","Error","aqiData","forEach","feature","AQI","lat","long","attributes","getIntensity","aqi","push","heatLayer","radius","blur","gradient","catch","error","console","componentWillUnmount","remove","render","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","Dashboard","_s","navigate","longitude","setLongitude","latitude","setLatitude","predictedAqi","setPredictedAqi","jsonData","setJsonData","locations","setLocations","selectedLocation","setSelectedLocation","healthRecommendation","setHealthRecommendation","uniqueLocations","Set","record","Location","handleLocationChange","event","newLocation","target","value","queryParams","URLSearchParams","window","location","search","set","newUrl","pathname","toString","history","pushState","path","updateCharts","filteredData","filter","timeRange","Date","pm25Data","pm10Data","co2Data","CO2","tempData","Temperature","humidData","Humidity","setChartsData","avgPM25","reduce","a","b","length","toFixed","avgPM10","avgCO2","averageAQI","Math","max","recommendation","getHealthRecommendation","chartsData","aqiValue","parseFloat","handleSubmit","preventDefault","alert","method","mode","ok","predicted_aqi","className","children","href","onClick","icon","htmlFor","onChange","onSubmit","type","step","e","placeholder","required","_c","$RefreshReg$"],"sources":["/Users/Rayyan./Desktop/FYP/AtmosMonitor/frontend/src/pages/Dashboard/dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"; // Correct import for useEffect\nimport { useNavigate } from \"react-router-dom\"; // Correct import for useNavigate\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Plot from \"react-plotly.js\"; // Correct import statement\nimport {\n  faHouse,\n  faDesktop,\n  faBell,\n  faChartColumn,\n  faMapLocationDot,\n  faHeartPulse,\n  faPieChart,\n  faChartBar,\n  faTachometerAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./dashboard.css\";\nimport GaugeChart from \"react-gauge-chart\";\nimport {\n  PieChart,\n  Pie,\n  BarChart,\n  Bar,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  Cell,\n} from \"recharts\";\n\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet.heat\"; // Import leaflet.heat plugin\n\nclass HeatMap extends React.Component {\n  componentDidMount() {\n    this.map = L.map(\"heatmap\").setView([30.7628, 72.9297], 10);\n\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      maxZoom: 19,\n    }).addTo(this.map);\n\n    fetch(\"/aqidata.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        if (!data || !Array.isArray(data.features)) {\n          throw new Error(\"Invalid data structure\");\n        }\n\n        const aqiData = [];\n        data.features.forEach((feature) => {\n          const { AQI, lat, long } = feature.attributes;\n          const getIntensity = (aqi) => {\n            if (aqi <= 224.890014) return 0.6;\n            if (aqi <= 226.57779) return 0.8;\n            return 1.0;\n          };\n          aqiData.push([lat, long, getIntensity(AQI)]);\n        });\n\n        L.heatLayer(aqiData, {\n          radius: 25,\n          blur: 15,\n          maxZoom: 13,\n          gradient: {\n            0.4: \"blue\",\n            0.6: \"lime\",\n            0.7: \"yellow\",\n            0.8: \"orange\",\n            1.0: \"red\",\n          },\n        }).addTo(this.map);\n      })\n      .catch((error) => {\n        console.error(\"Error loading AQI data:\", error);\n      });\n  }\n\n  componentWillUnmount() {\n    if (this.map) {\n      this.map.remove();\n    }\n  }\n\n  render() {\n    return <div id=\"heatmap\" style={{ width: \"100%\", height: \"400px\" }}></div>;\n  }\n}\n\nfunction Dashboard() {\n  const navigate = useNavigate();\n\n  const [longitude, setLongitude] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n  const [predictedAqi, setPredictedAqi] = useState(\"N/A\");\n  const [jsonData, setJsonData] = useState(null);\n  const [locations, setLocations] = useState([]);\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const [healthRecommendation, setHealthRecommendation] = useState(\"\");\n\n  useEffect(() => {\n    fetch(\"csvjson.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        setJsonData(data);\n        const uniqueLocations = [\n          ...new Set(data.map((record) => record.Location)),\n        ];\n        setLocations(uniqueLocations);\n        setSelectedLocation(uniqueLocations[0]); // Set default location\n      })\n      .catch((error) => console.error(\"Error fetching data:\", error));\n  }, []);\n\n  const handleLocationChange = (event) => {\n    const newLocation = event.target.value;\n    setSelectedLocation(newLocation);\n\n    const queryParams = new URLSearchParams(window.location.search);\n    queryParams.set(\"location\", newLocation);\n\n    const newUrl = `${window.location.pathname}?${queryParams.toString()}`;\n    window.history.pushState({ path: newUrl }, \"\", newUrl);\n  };\n\n  useEffect(() => {\n    if (jsonData && selectedLocation) {\n      updateCharts(selectedLocation);\n    }\n  }, [selectedLocation, jsonData]);\n\n  const updateCharts = (selectedLocation) => {\n    const filteredData = jsonData.filter(\n      (record) => record.Location === selectedLocation\n    );\n    const timeRange = filteredData.map((record) => record.Date);\n    const pm25Data = filteredData.map((record) => record[\"PM2.5\"]);\n    const pm10Data = filteredData.map((record) => record[\"PM10\"]);\n    const co2Data = filteredData.map((record) => record.CO2);\n    const tempData = filteredData.map((record) => record.Temperature);\n    const humidData = filteredData.map((record) => record.Humidity);\n\n    setChartsData({\n      timeRange,\n      pm25Data,\n      pm10Data,\n      co2Data,\n      tempData,\n      humidData,\n    });\n\n    // Calculate average AQI and generate health recommendation\n    const avgPM25 = (\n      pm25Data.reduce((a, b) => a + b, 0) / pm25Data.length\n    ).toFixed(2);\n    const avgPM10 = (\n      pm10Data.reduce((a, b) => a + b, 0) / pm10Data.length\n    ).toFixed(2);\n    const avgCO2 = (\n      co2Data.reduce((a, b) => a + b, 0) / co2Data.length\n    ).toFixed(2);\n\n    const averageAQI = Math.max(avgPM25, avgPM10, avgCO2);\n    const recommendation = getHealthRecommendation(averageAQI);\n    setHealthRecommendation(recommendation);\n  };\n\n  const [chartsData, setChartsData] = useState({\n    timeRange: [],\n    pm25Data: [],\n    pm10Data: [],\n    co2Data: [],\n    tempData: [],\n    humidData: [],\n  });\n\n  const getHealthRecommendation = (aqi) => {\n    const aqiValue = parseFloat(aqi);\n    if (aqiValue <= 50) return \"Air quality is good. You can go outside.\";\n    if (aqiValue <= 100)\n      return \"Air quality is moderate. Consider limiting outdoor activities.\";\n    if (aqiValue <= 150)\n      return \"Air quality is unhealthy for sensitive groups. Stay indoors if you have respiratory issues.\";\n    if (aqiValue <= 200)\n      return \"Air quality is unhealthy. Limit outdoor exposure.\";\n    if (aqiValue <= 300)\n      return \"Air quality is very unhealthy. Stay indoors and wear a mask if you need to go outside.\";\n    return \"Air quality is hazardous. Stay indoors and avoid outdoor activities.\";\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!longitude || !latitude) {\n      alert(\"Please enter both longitude and latitude.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        `http://127.0.0.1:5000/predict?longitude=${longitude}&latitude=${latitude}`,\n        {\n          method: \"GET\",\n          mode: \"cors\",\n        }\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.predicted_aqi) {\n          setPredictedAqi(data.predicted_aqi.toFixed(2));\n        } else {\n          setPredictedAqi(\"Error fetching data\");\n        }\n      } else {\n        setPredictedAqi(\"Error fetching data\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\n        \"There was an error fetching the AQI prediction. Please try again later.\"\n      );\n    }\n  };\n\n  return (\n    <div className=\"dashboard\">\n      {/* Sidebar */}\n      <aside className=\"sidebar\">\n        <div className=\"sidebar-logo\"> Dashboard</div>\n        <ul className=\"sidebar-links\">\n          <li>\n            <a href=\"#home\" onClick={() => navigate(\"/\")}>\n              <FontAwesomeIcon icon={faHouse} /> Home\n            </a>\n          </li>\n          {/* Add other sidebar links */}\n        </ul>\n      </aside>\n\n      {/* Main Content */}\n      <main className=\"main-content\">\n        <div className=\"dropdown-container\">\n          <label htmlFor=\"locationDropdown\">Select Location: </label>\n          <select\n            id=\"locationDropdown\"\n            value={selectedLocation || \"\"}\n            onChange={handleLocationChange}\n          >\n            {locations.map((location) => (\n              <option key={location} value={location}>\n                {location}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <section className=\"stats\" id=\"stats\">\n          <h2>Monitoring Environment</h2>\n          <div className=\"info-cards-container\">\n            <div className=\"info-card\">78 Pollution</div>\n            <div className=\"info-card\">12 Health</div>\n            <div className=\"info-card\">13 Traffic Rush</div>\n            <div className=\"info-card\">1 Vehicle</div>\n          </div>\n        </section>\n\n        {/* Health Recommendation */}\n        <section className=\"Recommendations-system\" id=\"Recommendation\">\n          <h2>Recommendations System </h2>\n          <div className=\"Prediction\" id=\"Prediction\">\n            <h1>Air Quality Index (AQI) Prediction</h1>\n            <form onSubmit={handleSubmit}>\n              <label htmlFor=\"longitude\">Longitude:</label>\n              <input\n                type=\"number\"\n                step=\"any\"\n                id=\"longitude\"\n                value={longitude}\n                onChange={(e) => setLongitude(e.target.value)}\n                placeholder=\"Enter Longitude\"\n                required\n              />\n\n              <label htmlFor=\"latitude\">Latitude:</label>\n              <input\n                type=\"number\"\n                step=\"any\"\n                id=\"latitude\"\n                value={latitude}\n                onChange={(e) => setLatitude(e.target.value)}\n                placeholder=\"Enter Latitude\"\n                required\n              />\n\n              <button type=\"submit\">Get AQI</button>\n            </form>\n\n            <div id=\"result\">\n              <h3>\n                Predicted AQI: <span>{predictedAqi}</span>\n              </h3>\n              {/* Health Recommendation */}\n              {healthRecommendation && (\n                <div className=\"health-recommendation\">\n                  <h4>Health Recommendation:</h4>\n                  <p>{healthRecommendation}</p>\n                </div>\n              )}\n            </div>\n          </div>\n        </section>\n      </main>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}