{"ast":null,"code":"var _jsxFileName = \"/Users/Rayyan./Desktop/FYP/AtmosMonitor/frontend/src/pages/Dashboard/dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\"; // Correct import for useEffect\nimport { useNavigate } from \"react-router-dom\"; // Correct import for useNavigate\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Plot from \"react-plotly.js\"; // Correct import statement\nimport { faHouse, faDesktop, faBell, faChartColumn, faMapLocationDot, faHeartPulse, faPieChart, faChartBar, faTachometerAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport \"./dashboard.css\";\nimport GaugeChart from \"react-gauge-chart\";\nimport { PieChart, Pie, BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend, ResponsiveContainer, Cell } from \"recharts\";\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet.heat\"; // Import leaflet.heat plugin\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass HeatMap extends React.Component {\n  componentDidMount() {\n    // Initialize the map centered on Faisalabad\n    this.map = L.map(\"heatmap\").setView([30.7628, 72.9297], 10);\n\n    // Add OpenStreetMap tile layer\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      maxZoom: 19\n    }).addTo(this.map);\n\n    // Fetch AQI data from the JSON file\n    fetch(\"/aqidata.json\") // Replace with the actual path to your JSON file\n    .then(response => response.json()).then(data => {\n      // Validate and process the JSON structure\n      if (!data || !Array.isArray(data.features)) {\n        throw new Error(\"Invalid data structure\");\n      }\n\n      // Prepare the data for the heatmap\n      const aqiData = [];\n      data.features.forEach(feature => {\n        const {\n          AQI,\n          lat,\n          long\n        } = feature.attributes; // Extract AQI and coordinates\n\n        // Determine intensity based on AQI value for heatmap\n        const getIntensity = aqi => {\n          if (aqi <= 224.890014) return 0.6; // Moderate AQI (yellow zone)\n          if (aqi <= 226.57779) return 0.8; // Very Unhealthy AQI (red zone)\n          return 1.0; // Hazardous AQI (maroon zone)\n        };\n\n        // Push the [lat, long, intensity] format to the aqiData array\n        aqiData.push([lat, long, getIntensity(AQI)]);\n      });\n      // Add heatmap layer\n      L.heatLayer(aqiData, {\n        radius: 25,\n        // Radius of each heatmap point\n        blur: 15,\n        // Blur effect intensity\n        maxZoom: 13,\n        // Maximum zoom level\n        gradient: {\n          0.4: \"blue\",\n          // Low intensity\n          0.6: \"lime\",\n          // Moderate intensity\n          0.7: \"yellow\",\n          // Higher intensity\n          0.8: \"orange\",\n          // Very high intensity\n          1.0: \"red\" // Maximum intensity\n        }\n      }).addTo(this.map);\n    }).catch(error => {\n      console.error(\"Error loading AQI data:\", error);\n    });\n  }\n  componentWillUnmount() {\n    if (this.map) {\n      this.map.remove();\n    }\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"heatmap\",\n      style: {\n        width: \"100%\",\n        height: \"400px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 12\n    }, this);\n  }\n}\nfunction Dashboard() {\n  _s();\n  const navigate = useNavigate();\n  const [longitude, setLongitude] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n  const [predictedAqi, setPredictedAqi] = useState(\"N/A\");\n  const [jsonData, setJsonData] = useState(null); // To store your JSON data\n  const [locations, setLocations] = useState([]); // To store locations\n  const [selectedLocation, setSelectedLocation] = useState(null); // To store selected location\n\n  const [alerts, setAlerts] = useState([]); // Store alerts\n  const [alertName, setAlertName] = useState(\"\"); // Alert name input\n  const [alertFrequency, setAlertFrequency] = useState(\"Daily\"); // Frequency of alert\n  const [alertTime, setAlertTime] = useState(\"\"); // Custom time for alert\n\n  // Handle adding an alert\n  // Handle adding an alert\n  const handleAddAlert = e => {\n    e.preventDefault();\n\n    // Make sure the alert name and time are valid\n    if (!alertName || !alertTime) return; // Don't add if name or time is empty\n\n    // Check if the alert already exists (based on name, for simplicity)\n    const alertExists = alerts.some(alert => alert.name === alertName && alert.time === alertTime);\n    if (alertExists) {\n      console.log(\"This alert already exists!\");\n      return; // Prevent adding a duplicate alert\n    }\n\n    // Create a new alert\n    const newAlert = {\n      id: Date.now(),\n      // Unique ID for each alert\n      name: alertName,\n      frequency: alertFrequency,\n      time: alertTime // Store the custom time\n    };\n\n    // Add the new alert to the list\n    setAlerts(prevAlerts => [...prevAlerts, newAlert]);\n\n    // Clear input fields after adding\n    setAlertName(\"\"); // Clear name input\n    setAlertFrequency(\"Daily\"); // Reset frequency selection\n    setAlertTime(\"\"); // Reset time picker\n  };\n\n  // Handle removing an alert\n  const handleRemoveAlert = alertId => {\n    setAlerts(prevAlerts => prevAlerts.filter(alert => alert.id !== alertId));\n  };\n\n  // Set up periodic notifications (just for demonstration purposes)\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const currentTime = new Date().toISOString();\n      alerts.forEach(alert => {\n        // Check if current time matches the alert time\n        if (alert.time === currentTime) {\n          console.log(`Alert triggered: ${alert.name}`);\n          // You can replace this log with an actual notification logic\n        }\n      });\n    }, 1000); // Check every second for simplicity\n    return () => clearInterval(intervalId); // Clean up interval on unmount\n  }, [alerts]);\n  const [pollutionData, setPollutionData] = useState(null); // Store pollution data\n  const [pollutionAlert, setPollutionAlert] = useState(\"\"); // Pollution level alert message\n  const [alertThresholds, setAlertThresholds] = useState({\n    pm25: 100,\n    // Threshold for PM2.5\n    pm10: 150,\n    // Threshold for PM10\n    co2: 500 // Threshold for CO2\n  });\n  useEffect(() => {\n    const fetchPollutionData = () => {\n      // Simulated pollution data (in real use, fetch data from an API)\n      const simulatedData = {\n        pm25: Math.random() * 200,\n        // Simulated PM2.5 value\n        pm10: Math.random() * 200,\n        // Simulated PM10 value\n        co2: Math.random() * 1000 // Simulated CO2 value\n      };\n      setPollutionData(simulatedData);\n      checkPollutionLevels(simulatedData); // Check pollution levels after fetching\n    };\n    fetchPollutionData();\n    const intervalId = setInterval(fetchPollutionData, 60000); // Fetch data every minute\n    return () => clearInterval(intervalId); // Clean up on unmount\n  }, []);\n\n  // Check pollution levels and trigger alerts\n  const checkPollutionLevels = data => {\n    let alertMessage = \"\";\n    if (data.pm25 > alertThresholds.pm25) {\n      alertMessage += `PM2.5 levels are high: ${data.pm25.toFixed(2)} µg/m³. `;\n    }\n    if (data.pm10 > alertThresholds.pm10) {\n      alertMessage += `PM10 levels are high: ${data.pm10.toFixed(2)} µg/m³. `;\n    }\n    if (data.co2 > alertThresholds.co2) {\n      alertMessage += `CO2 levels are high: ${data.co2.toFixed(2)} ppm. `;\n    }\n    if (alertMessage) {\n      setPollutionAlert(alertMessage);\n      // Optionally, add the alert to the alert list\n      setAlerts(prevAlerts => [...prevAlerts, {\n        id: Date.now(),\n        message: alertMessage\n      }]);\n    } else {\n      setPollutionAlert(\"Pollution levels are normal.\");\n    }\n  };\n  useEffect(() => {\n    // Fetch the data from JSON\n    fetch(\"csvjson.json\") // Replace with actual file path or API\n    .then(response => response.json()).then(data => {\n      setJsonData(data);\n      // Extract unique locations\n      const uniqueLocations = [...new Set(data.map(record => record.Location))];\n      setLocations(uniqueLocations);\n      setSelectedLocation(uniqueLocations[0]); // Set default location\n    }).catch(error => console.error(\"Error fetching data:\", error));\n  }, []);\n  const handleLocationChange = event => {\n    const newLocation = event.target.value;\n    setSelectedLocation(newLocation);\n\n    // Update the query parameters without reloading the page\n    const queryParams = new URLSearchParams(window.location.search);\n    queryParams.set(\"location\", newLocation);\n    const newUrl = `${window.location.pathname}?${queryParams.toString()}`;\n    window.history.pushState({\n      path: newUrl\n    }, \"\", newUrl);\n  };\n  useEffect(() => {\n    if (jsonData && selectedLocation) {\n      updateCharts(selectedLocation);\n    }\n  }, [selectedLocation, jsonData]);\n  const updateCharts = selectedLocation => {\n    const filteredData = jsonData.filter(record => record.Location === selectedLocation);\n    const timeRange = filteredData.map(record => record.Date);\n    const pm25Data = filteredData.map(record => record[\"PM2.5\"]);\n    const pm10Data = filteredData.map(record => record[\"PM10\"]);\n    const co2Data = filteredData.map(record => record.CO2);\n    const tempData = filteredData.map(record => record.Temperature);\n    const humidData = filteredData.map(record => record.Humidity);\n\n    // Update chart data state\n    setChartsData({\n      timeRange,\n      pm25Data,\n      pm10Data,\n      co2Data,\n      tempData,\n      humidData\n    });\n  };\n  const [chartsData, setChartsData] = useState({\n    timeRange: [],\n    pm25Data: [],\n    pm10Data: [],\n    co2Data: [],\n    tempData: [],\n    humidData: []\n  });\n\n  // Filter data for the selected location\n  const filteredData = jsonData ? jsonData.filter(record => record.Location === selectedLocation) : [];\n  if (!jsonData || locations.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading data...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Data preparation\n  const timeRange = filteredData.map(record => record.Date);\n  const pm25Data = filteredData.map(record => record[\"PM2.5\"]);\n  const pm10Data = filteredData.map(record => record[\"PM10\"]);\n  const co2Data = filteredData.map(record => record.CO2);\n  const avgPM25 = parseFloat((pm25Data.reduce((a, b) => a + b, 0) / pm25Data.length).toFixed(2));\n  const avgPM10 = parseFloat((pm10Data.reduce((a, b) => a + b, 0) / pm10Data.length).toFixed(2));\n  const avgCO2 = parseFloat((co2Data.reduce((a, b) => a + b, 0) / co2Data.length).toFixed(2));\n  const pieData = [{\n    name: \"PM2.5\",\n    value: avgPM25\n  }, {\n    name: \"PM10\",\n    value: avgPM10\n  }, {\n    name: \"CO2\",\n    value: avgCO2\n  }];\n  const lastDayIndex = timeRange.length - 1;\n  const barData = [{\n    name: \"PM2.5\",\n    value: pm25Data[lastDayIndex]\n  }, {\n    name: \"PM10\",\n    value: pm10Data[lastDayIndex]\n  }, {\n    name: \"CO2\",\n    value: co2Data[lastDayIndex]\n  }];\n  const stackedBarData = timeRange.map((time, index) => ({\n    name: time,\n    PM25: pm25Data[index],\n    PM10: pm10Data[index],\n    CO2: co2Data[index]\n  }));\n  const latestAQI = Math.max(pm25Data[lastDayIndex], pm10Data[lastDayIndex], co2Data[lastDayIndex]);\n  const maxAQI = 500; // Maximum AQI value\n  const gaugeValue = latestAQI / maxAQI; // Scale AQI value to range 0-1\n\n  const handleSubmit = async event => {\n    event.preventDefault();\n    if (!longitude || !latitude) {\n      alert(\"Please enter both longitude and latitude.\");\n      return;\n    }\n    try {\n      const response = await fetch(`http://127.0.0.1:5000/predict?longitude=${longitude}&latitude=${latitude}`, {\n        method: \"GET\",\n        mode: \"cors\" // Include CORS headers\n      });\n      if (response.ok) {\n        const data = await response.json();\n        if (data.predicted_aqi) {\n          setPredictedAqi(data.predicted_aqi.toFixed(2));\n        } else {\n          setPredictedAqi(\"Error fetching data\");\n        }\n      } else {\n        setPredictedAqi(\"Error fetching data\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"There was an error fetching the AQI prediction. Please try again later.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"aside\", {\n      className: \"sidebar\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"sidebar-logo\",\n        children: \" Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"sidebar-links\",\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#home\",\n            onClick: () => navigate(\"/\"),\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faHouse\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 385,\n              columnNumber: 15\n            }, this), \" Home\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#stats\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faDesktop\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 390,\n              columnNumber: 15\n            }, this), \" Monitoring Environment\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 389,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 388,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#visual-data\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faDesktop\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 395,\n              columnNumber: 15\n            }, this), \" Visual Data\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#pie-chart\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faPieChart\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 15\n            }, this), \" Pie Chart\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 398,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#bar-chart\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faChartColumn\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 405,\n              columnNumber: 15\n            }, this), \" Bar Chart\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 403,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#stacked-bar-chart\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faChartBar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 411,\n              columnNumber: 15\n            }, this), \" Stacked Bar\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 410,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 409,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#gauge-chart\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faTachometerAlt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 15\n            }, this), \" Gauge Chart\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#heat-map\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faMapLocationDot\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 15\n            }, this), \" Heat Map\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 420,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 419,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#recommendation\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faDesktop\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 15\n            }, this), \" Recommendations System\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 425,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#alerts\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faBell\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 431,\n              columnNumber: 15\n            }, this), \" Managing ALerts\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"#health-impact\",\n            children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n              icon: faHeartPulse\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 436,\n              columnNumber: 15\n            }, this), \" Health Impact\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 434,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dropdown-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"locationDropdown\",\n          children: \"Select Location: \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 445,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n          id: \"locationDropdown\",\n          value: selectedLocation || \"\",\n          onChange: handleLocationChange,\n          children: locations.map(location => /*#__PURE__*/_jsxDEV(\"option\", {\n            value: location,\n            children: location\n          }, location, false, {\n            fileName: _jsxFileName,\n            lineNumber: 452,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 444,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"stats\",\n        id: \"stats\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Monitoring Environment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 460,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-cards-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-card\",\n            children: \"78 Pollution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 462,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-card\",\n            children: \"12 Health\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-card\",\n            children: \"13 Traffic Rush\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 464,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-card\",\n            children: \"1 Vehicle\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 465,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 461,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 459,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"visualize\",\n        id: \"visual-data-section\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Visualize Data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 470,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"pie-chart\",\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Average Pollutant Distribution\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 400,\n              children: /*#__PURE__*/_jsxDEV(PieChart, {\n                children: [/*#__PURE__*/_jsxDEV(Pie, {\n                  data: pieData,\n                  dataKey: \"value\",\n                  nameKey: \"name\",\n                  outerRadius: 150,\n                  fill: \"#8884d8\",\n                  children: pieData.map((entry, index) => /*#__PURE__*/_jsxDEV(Cell, {\n                    fill: [\"#FF6384\", \"#36A2EB\", \"#FFCE56\"][index]\n                  }, index, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 23\n                  }, this))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 492,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 493,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 476,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 475,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 473,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"pm25-pm10-chart\",\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"PM2.5 and PM10 Levels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 501,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Plot, {\n            data: [{\n              x: chartsData.timeRange,\n              y: chartsData.pm25Data,\n              name: \"PM2.5\",\n              type: \"scatter\",\n              line: {\n                color: \"#1f77b4\"\n              }\n            }, {\n              x: chartsData.timeRange,\n              y: chartsData.pm10Data,\n              name: \"PM10\",\n              type: \"scatter\",\n              line: {\n                color: \"#ff7f0e\"\n              }\n            }],\n            layout: {\n              title: `PM2.5 and PM10 Levels`,\n              xaxis: {\n                title: \"Date\"\n              },\n              yaxis: {\n                title: \"Concentration (μg/m³)\"\n              },\n              margin: {\n                t: 50,\n                l: 50,\n                r: 50,\n                b: 50\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 500,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"co2-chart\",\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"CO2 Levels\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Plot, {\n            data: [{\n              x: chartsData.timeRange,\n              y: chartsData.co2Data,\n              type: \"scatter\",\n              line: {\n                color: \"#2ca02c\"\n              }\n            }],\n            layout: {\n              title: `CO2 Levels`,\n              xaxis: {\n                title: \"Date\"\n              },\n              yaxis: {\n                title: \"CO2 Concentration (ppm)\"\n              },\n              margin: {\n                t: 50,\n                l: 50,\n                r: 50,\n                b: 50\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 531,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 529,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"temperature-humidity-chart\",\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Temperature & Humidity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 551,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Plot, {\n            data: [{\n              x: chartsData.timeRange,\n              y: chartsData.tempData,\n              type: \"scatter\",\n              name: \"Temperature\",\n              line: {\n                color: \"#d62728\"\n              }\n            }, {\n              x: chartsData.timeRange,\n              y: chartsData.humidData,\n              type: \"scatter\",\n              name: \"Humidity\",\n              line: {\n                color: \"#9467bd\"\n              }\n            }],\n            layout: {\n              title: \"Temperature & Humidity\",\n              xaxis: {\n                title: \"Date\"\n              },\n              yaxis: {\n                title: \"Temperature (°C)\"\n              },\n              yaxis2: {\n                title: \"Humidity (%)\",\n                overlaying: \"y\",\n                side: \"right\"\n              },\n              margin: {\n                t: 50,\n                l: 50,\n                r: 50,\n                b: 50\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 552,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 550,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"bar-chart\",\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Pollutant Levels on the Last Day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 400,\n              children: /*#__PURE__*/_jsxDEV(BarChart, {\n                data: barData,\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 592,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 593,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"value\",\n                  fill: \"#82ca9d\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 594,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 588,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 587,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 586,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 584,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"stacked-bar-chart\",\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Pollutants Over Time\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 602,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: /*#__PURE__*/_jsxDEV(ResponsiveContainer, {\n              width: \"100%\",\n              height: 400,\n              children: /*#__PURE__*/_jsxDEV(BarChart, {\n                data: stackedBarData,\n                stackOffset: \"sign\",\n                children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n                  strokeDasharray: \"3 3\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 606,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n                  dataKey: \"name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 607,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 608,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Legend, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"PM25\",\n                  stackId: \"a\",\n                  fill: \"#8884d8\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 611,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"PM10\",\n                  stackId: \"a\",\n                  fill: \"#FFCE56\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 612,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Bar, {\n                  dataKey: \"CO2\",\n                  stackId: \"a\",\n                  fill: \"#82ca9d\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 613,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 605,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 603,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 601,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"gauge-chart\",\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Air Quality Index (Latest)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 621,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: [/*#__PURE__*/_jsxDEV(GaugeChart, {\n              id: \"gauge-chart\",\n              nrOfLevels: 20,\n              colors: [\"#4CAF50\", \"#FFCE56\", \"#FF5733\", \"#C70039\"],\n              arcWidth: 0.3,\n              percent: gaugeValue,\n              textColor: \"#000\",\n              needleColor: \"#000\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              style: {\n                textAlign: \"center\",\n                marginTop: \"10px\",\n                fontSize: \"1.2rem\"\n              },\n              children: [\"AQI: \", latestAQI]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 632,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 620,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n          id: \"heat-map\",\n          className: \"chart-card\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Heat Map\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 646,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"chart-container\",\n            children: /*#__PURE__*/_jsxDEV(HeatMap, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 648,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 647,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 645,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 469,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"Recommendations-system\",\n        id: \"recommendation\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Recommendations System \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 654,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"Prediction\",\n          id: \"Prediction\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Air Quality Index (AQI) Prediction\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 656,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"longitude\",\n              children: \"Longitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 658,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"any\",\n              id: \"longitude\",\n              value: longitude,\n              onChange: e => setLongitude(e.target.value),\n              placeholder: \"Enter Longitude\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 659,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"latitude\",\n              children: \"Latitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 669,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"any\",\n              id: \"latitude\",\n              value: latitude,\n              onChange: e => setLatitude(e.target.value),\n              placeholder: \"Enter Latitude\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 670,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Get AQI\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"result\",\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: [\"Predicted AQI: \", /*#__PURE__*/_jsxDEV(\"span\", {\n                children: predictedAqi\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 685,\n                columnNumber: 32\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 684,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 683,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 655,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 653,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"custom-alerts\",\n        id: \"alerts\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Custom Alerts\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 692,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"add-alert-form\",\n          children: /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: handleAddAlert,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: alertName,\n              onChange: e => setAlertName(e.target.value),\n              placeholder: \"Enter Alert Name\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 697,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: alertFrequency,\n              onChange: e => setAlertFrequency(e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Daily\",\n                children: \"Daily\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 708,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Weekly\",\n                children: \"Weekly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 709,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Monthly\",\n                children: \"Monthly\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 710,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 704,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"datetime-local\",\n              value: alertTime,\n              onChange: e => setAlertTime(e.target.value),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 712,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              children: \"Add Alert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 718,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 696,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 695,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-list\",\n          children: alerts.map(alert => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert-item\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: alert.name\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 727,\n                columnNumber: 19\n              }, this), \" - \", alert.frequency, \" -\", \" \", new Date(alert.time).toLocaleString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 726,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleRemoveAlert(alert.id),\n              children: \"Remove\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 17\n            }, this)]\n          }, alert.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 725,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 723,\n          columnNumber: 11\n        }, this), pollutionAlert && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert-item\",\n          children: pollutionAlert\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 737,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 691,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"health-impact\",\n        id: \"health-impact\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Health Impact Forecasting\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 741,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"forecast-grid\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"advice-card alert-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"advice-card-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-exclamation-triangle\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 746,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 745,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Pollution Alert\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 748,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: pollutionAlert || \"Pollution levels are normal.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 749,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 744,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"advice-card health-advice-card\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"advice-card-icon\",\n              children: /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"fas fa-mask\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 755,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 754,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Health Advice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 757,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: healthAdvice || \"No health concerns at the moment.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 758,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 753,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"pollution-meter\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Pollution Index Meter\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 763,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"meter-container\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"meter\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"meter-fill\",\n                  style: {\n                    width: '${(pollutionData ? Math.max(pollutionData.pm25, pollutionData.pm10, pollutionData.co2) / 500) * 100 : 0}%'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 766,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 765,\n                columnNumber: 13\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 764,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [\"Current pollution level is at \", pollutionData ? Math.max(pollutionData.pm25, pollutionData.pm10, pollutionData.co2).toFixed(2) : \"N/A\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 774,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 762,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"forecast-timeline\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Forecast Timeline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 781,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Air quality expected to improve in 3 hours.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 782,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 780,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"plan-day\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Plan Your Day\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 787,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"It\\u2019s a good day for indoor activities. Avoid outdoor activities until air quality improves.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 788,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 786,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 742,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 740,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 443,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      className: \"notifications\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Recent Notifications\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 796,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"notification-grid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-card\",\n          children: \"New Health Alert in your area!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 798,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-card\",\n          children: \"Traffic levels are high this morning.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 801,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-card\",\n          children: \"New air quality forecast is available.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 804,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"notification-card\",\n          children: \"Reminder: Update your custom alerts.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 797,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 795,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 378,\n    columnNumber: 5\n  }, this);\n}\n_s(Dashboard, \"VdNuJZT/yYDuKVkRmqKVEUx3ONY=\", false, function () {\n  return [useNavigate];\n});\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","FontAwesomeIcon","Plot","faHouse","faDesktop","faBell","faChartColumn","faMapLocationDot","faHeartPulse","faPieChart","faChartBar","faTachometerAlt","GaugeChart","PieChart","Pie","BarChart","Bar","CartesianGrid","XAxis","YAxis","Tooltip","Legend","ResponsiveContainer","Cell","L","jsxDEV","_jsxDEV","HeatMap","Component","componentDidMount","map","setView","tileLayer","maxZoom","addTo","fetch","then","response","json","data","Array","isArray","features","Error","aqiData","forEach","feature","AQI","lat","long","attributes","getIntensity","aqi","push","heatLayer","radius","blur","gradient","catch","error","console","componentWillUnmount","remove","render","id","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","Dashboard","_s","navigate","longitude","setLongitude","latitude","setLatitude","predictedAqi","setPredictedAqi","jsonData","setJsonData","locations","setLocations","selectedLocation","setSelectedLocation","alerts","setAlerts","alertName","setAlertName","alertFrequency","setAlertFrequency","alertTime","setAlertTime","handleAddAlert","e","preventDefault","alertExists","some","alert","name","time","log","newAlert","Date","now","frequency","prevAlerts","handleRemoveAlert","alertId","filter","intervalId","setInterval","currentTime","toISOString","clearInterval","pollutionData","setPollutionData","pollutionAlert","setPollutionAlert","alertThresholds","setAlertThresholds","pm25","pm10","co2","fetchPollutionData","simulatedData","Math","random","checkPollutionLevels","alertMessage","toFixed","message","uniqueLocations","Set","record","Location","handleLocationChange","event","newLocation","target","value","queryParams","URLSearchParams","window","location","search","set","newUrl","pathname","toString","history","pushState","path","updateCharts","filteredData","timeRange","pm25Data","pm10Data","co2Data","CO2","tempData","Temperature","humidData","Humidity","setChartsData","chartsData","length","children","avgPM25","parseFloat","reduce","a","b","avgPM10","avgCO2","pieData","lastDayIndex","barData","stackedBarData","index","PM25","PM10","latestAQI","max","maxAQI","gaugeValue","handleSubmit","method","mode","ok","predicted_aqi","className","href","onClick","icon","htmlFor","onChange","dataKey","nameKey","outerRadius","fill","entry","x","y","type","line","color","layout","title","xaxis","yaxis","margin","t","l","r","yaxis2","overlaying","side","strokeDasharray","stackOffset","stackId","nrOfLevels","colors","arcWidth","percent","textColor","needleColor","textAlign","marginTop","fontSize","onSubmit","step","placeholder","required","toLocaleString","healthAdvice","_c","$RefreshReg$"],"sources":["/Users/Rayyan./Desktop/FYP/AtmosMonitor/frontend/src/pages/Dashboard/dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\"; // Correct import for useEffect\nimport { useNavigate } from \"react-router-dom\"; // Correct import for useNavigate\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport Plot from \"react-plotly.js\"; // Correct import statement\nimport {\n  faHouse,\n  faDesktop,\n  faBell,\n  faChartColumn,\n  faMapLocationDot,\n  faHeartPulse,\n  faPieChart,\n  faChartBar,\n  faTachometerAlt,\n} from \"@fortawesome/free-solid-svg-icons\";\nimport \"./dashboard.css\";\nimport GaugeChart from \"react-gauge-chart\";\nimport {\n  PieChart,\n  Pie,\n  BarChart,\n  Bar,\n  CartesianGrid,\n  XAxis,\n  YAxis,\n  Tooltip,\n  Legend,\n  ResponsiveContainer,\n  Cell,\n} from \"recharts\";\n\nimport L from \"leaflet\";\nimport \"leaflet/dist/leaflet.css\";\nimport \"leaflet.heat\"; // Import leaflet.heat plugin\n\nclass HeatMap extends React.Component {\n  componentDidMount() {\n    // Initialize the map centered on Faisalabad\n    this.map = L.map(\"heatmap\").setView([30.7628, 72.9297], 10);\n\n    // Add OpenStreetMap tile layer\n    L.tileLayer(\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\", {\n      maxZoom: 19,\n    }).addTo(this.map);\n\n    // Fetch AQI data from the JSON file\n    fetch(\"/aqidata.json\") // Replace with the actual path to your JSON file\n      .then((response) => response.json())\n      .then((data) => {\n        // Validate and process the JSON structure\n        if (!data || !Array.isArray(data.features)) {\n          throw new Error(\"Invalid data structure\");\n        }\n\n        // Prepare the data for the heatmap\n        const aqiData = [];\n        data.features.forEach((feature) => {\n          const { AQI, lat, long } = feature.attributes; // Extract AQI and coordinates\n\n          // Determine intensity based on AQI value for heatmap\n          const getIntensity = (aqi) => {\n            if (aqi <= 224.890014) return 0.6; // Moderate AQI (yellow zone)\n            if (aqi <= 226.57779) return 0.8; // Very Unhealthy AQI (red zone)\n            return 1.0; // Hazardous AQI (maroon zone)\n          };\n\n          // Push the [lat, long, intensity] format to the aqiData array\n          aqiData.push([lat, long, getIntensity(AQI)]);\n        });\n        // Add heatmap layer\n        L.heatLayer(aqiData, {\n          radius: 25, // Radius of each heatmap point\n          blur: 15, // Blur effect intensity\n          maxZoom: 13, // Maximum zoom level\n          gradient: {\n            0.4: \"blue\", // Low intensity\n            0.6: \"lime\", // Moderate intensity\n            0.7: \"yellow\", // Higher intensity\n            0.8: \"orange\", // Very high intensity\n            1.0: \"red\", // Maximum intensity\n          },\n        }).addTo(this.map);\n      })\n      .catch((error) => {\n        console.error(\"Error loading AQI data:\", error);\n      });\n  }\n\n  componentWillUnmount() {\n    if (this.map) {\n      this.map.remove();\n    }\n  }\n\n  render() {\n    return <div id=\"heatmap\" style={{ width: \"100%\", height: \"400px\" }}></div>;\n  }\n}\n\nfunction Dashboard() {\n  const navigate = useNavigate();\n\n  const [longitude, setLongitude] = useState(\"\");\n  const [latitude, setLatitude] = useState(\"\");\n  const [predictedAqi, setPredictedAqi] = useState(\"N/A\");\n  const [jsonData, setJsonData] = useState(null); // To store your JSON data\n  const [locations, setLocations] = useState([]); // To store locations\n  const [selectedLocation, setSelectedLocation] = useState(null); // To store selected location\n\n  const [alerts, setAlerts] = useState([]); // Store alerts\n  const [alertName, setAlertName] = useState(\"\"); // Alert name input\n  const [alertFrequency, setAlertFrequency] = useState(\"Daily\"); // Frequency of alert\n  const [alertTime, setAlertTime] = useState(\"\"); // Custom time for alert\n\n  // Handle adding an alert\n  // Handle adding an alert\n  const handleAddAlert = (e) => {\n    e.preventDefault();\n\n    // Make sure the alert name and time are valid\n    if (!alertName || !alertTime) return; // Don't add if name or time is empty\n\n    // Check if the alert already exists (based on name, for simplicity)\n    const alertExists = alerts.some(\n      (alert) => alert.name === alertName && alert.time === alertTime\n    );\n\n    if (alertExists) {\n      console.log(\"This alert already exists!\");\n      return; // Prevent adding a duplicate alert\n    }\n\n    // Create a new alert\n    const newAlert = {\n      id: Date.now(), // Unique ID for each alert\n      name: alertName,\n      frequency: alertFrequency,\n      time: alertTime, // Store the custom time\n    };\n\n    // Add the new alert to the list\n    setAlerts((prevAlerts) => [...prevAlerts, newAlert]);\n\n    // Clear input fields after adding\n    setAlertName(\"\"); // Clear name input\n    setAlertFrequency(\"Daily\"); // Reset frequency selection\n    setAlertTime(\"\"); // Reset time picker\n  };\n\n  // Handle removing an alert\n  const handleRemoveAlert = (alertId) => {\n    setAlerts((prevAlerts) =>\n      prevAlerts.filter((alert) => alert.id !== alertId)\n    );\n  };\n\n  // Set up periodic notifications (just for demonstration purposes)\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      const currentTime = new Date().toISOString();\n      alerts.forEach((alert) => {\n        // Check if current time matches the alert time\n        if (alert.time === currentTime) {\n          console.log(`Alert triggered: ${alert.name}`);\n          // You can replace this log with an actual notification logic\n        }\n      });\n    }, 1000); // Check every second for simplicity\n    return () => clearInterval(intervalId); // Clean up interval on unmount\n  }, [alerts]);\n\n  const [pollutionData, setPollutionData] = useState(null); // Store pollution data\n  const [pollutionAlert, setPollutionAlert] = useState(\"\"); // Pollution level alert message\n  const [alertThresholds, setAlertThresholds] = useState({\n    pm25: 100, // Threshold for PM2.5\n    pm10: 150, // Threshold for PM10\n    co2: 500, // Threshold for CO2\n  });\n  useEffect(() => {\n    const fetchPollutionData = () => {\n      // Simulated pollution data (in real use, fetch data from an API)\n      const simulatedData = {\n        pm25: Math.random() * 200, // Simulated PM2.5 value\n        pm10: Math.random() * 200, // Simulated PM10 value\n        co2: Math.random() * 1000, // Simulated CO2 value\n      };\n      setPollutionData(simulatedData);\n      checkPollutionLevels(simulatedData); // Check pollution levels after fetching\n    };\n    fetchPollutionData();\n    const intervalId = setInterval(fetchPollutionData, 60000); // Fetch data every minute\n    return () => clearInterval(intervalId); // Clean up on unmount\n  }, []);\n\n  // Check pollution levels and trigger alerts\n  const checkPollutionLevels = (data) => {\n    let alertMessage = \"\";\n\n    if (data.pm25 > alertThresholds.pm25) {\n      alertMessage += `PM2.5 levels are high: ${data.pm25.toFixed(2)} µg/m³. `;\n    }\n\n    if (data.pm10 > alertThresholds.pm10) {\n      alertMessage += `PM10 levels are high: ${data.pm10.toFixed(2)} µg/m³. `;\n    }\n\n    if (data.co2 > alertThresholds.co2) {\n      alertMessage += `CO2 levels are high: ${data.co2.toFixed(2)} ppm. `;\n    }\n\n    if (alertMessage) {\n      setPollutionAlert(alertMessage);\n      // Optionally, add the alert to the alert list\n      setAlerts((prevAlerts) => [\n        ...prevAlerts,\n        { id: Date.now(), message: alertMessage },\n      ]);\n    } else {\n      setPollutionAlert(\"Pollution levels are normal.\");\n    }\n  };\n\n  useEffect(() => {\n    // Fetch the data from JSON\n    fetch(\"csvjson.json\") // Replace with actual file path or API\n      .then((response) => response.json())\n      .then((data) => {\n        setJsonData(data);\n        // Extract unique locations\n        const uniqueLocations = [\n          ...new Set(data.map((record) => record.Location)),\n        ];\n        setLocations(uniqueLocations);\n        setSelectedLocation(uniqueLocations[0]); // Set default location\n      })\n      .catch((error) => console.error(\"Error fetching data:\", error));\n  }, []);\n\n  const handleLocationChange = (event) => {\n    const newLocation = event.target.value;\n    setSelectedLocation(newLocation);\n\n    // Update the query parameters without reloading the page\n    const queryParams = new URLSearchParams(window.location.search);\n    queryParams.set(\"location\", newLocation);\n\n    const newUrl = `${window.location.pathname}?${queryParams.toString()}`;\n    window.history.pushState({ path: newUrl }, \"\", newUrl);\n  };\n  useEffect(() => {\n    if (jsonData && selectedLocation) {\n      updateCharts(selectedLocation);\n    }\n  }, [selectedLocation, jsonData]);\n\n  const updateCharts = (selectedLocation) => {\n    const filteredData = jsonData.filter(\n      (record) => record.Location === selectedLocation\n    );\n    const timeRange = filteredData.map((record) => record.Date);\n    const pm25Data = filteredData.map((record) => record[\"PM2.5\"]);\n    const pm10Data = filteredData.map((record) => record[\"PM10\"]);\n    const co2Data = filteredData.map((record) => record.CO2);\n    const tempData = filteredData.map((record) => record.Temperature);\n    const humidData = filteredData.map((record) => record.Humidity);\n\n    // Update chart data state\n    setChartsData({\n      timeRange,\n      pm25Data,\n      pm10Data,\n      co2Data,\n      tempData,\n      humidData,\n    });\n\n  };\n\n  const [chartsData, setChartsData] = useState({\n    timeRange: [],\n    pm25Data: [],\n    pm10Data: [],\n    co2Data: [],\n    tempData: [],\n    humidData: [],\n  });\n\n  // Filter data for the selected location\n  const filteredData = jsonData\n    ? jsonData.filter((record) => record.Location === selectedLocation)\n    : [];\n\n  if (!jsonData || locations.length === 0) {\n    return <div>Loading data...</div>;\n  }\n\n  // Data preparation\n  const timeRange = filteredData.map((record) => record.Date);\n  const pm25Data = filteredData.map((record) => record[\"PM2.5\"]);\n  const pm10Data = filteredData.map((record) => record[\"PM10\"]);\n  const co2Data = filteredData.map((record) => record.CO2);\n\n  const avgPM25 = parseFloat(\n    (pm25Data.reduce((a, b) => a + b, 0) / pm25Data.length).toFixed(2)\n  );\n  const avgPM10 = parseFloat(\n    (pm10Data.reduce((a, b) => a + b, 0) / pm10Data.length).toFixed(2)\n  );\n  const avgCO2 = parseFloat(\n    (co2Data.reduce((a, b) => a + b, 0) / co2Data.length).toFixed(2)\n  );\n\n  const pieData = [\n    { name: \"PM2.5\", value: avgPM25 },\n    { name: \"PM10\", value: avgPM10 },\n    { name: \"CO2\", value: avgCO2 },\n  ];\n\n  const lastDayIndex = timeRange.length - 1;\n  const barData = [\n    { name: \"PM2.5\", value: pm25Data[lastDayIndex] },\n    { name: \"PM10\", value: pm10Data[lastDayIndex] },\n    { name: \"CO2\", value: co2Data[lastDayIndex] },\n  ];\n\n  const stackedBarData = timeRange.map((time, index) => ({\n    name: time,\n    PM25: pm25Data[index],\n    PM10: pm10Data[index],\n    CO2: co2Data[index],\n  }));\n\n  const latestAQI = Math.max(\n    pm25Data[lastDayIndex],\n    pm10Data[lastDayIndex],\n    co2Data[lastDayIndex]\n  );\n  const maxAQI = 500; // Maximum AQI value\n  const gaugeValue = latestAQI / maxAQI; // Scale AQI value to range 0-1\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n\n    if (!longitude || !latitude) {\n      alert(\"Please enter both longitude and latitude.\");\n      return;\n    }\n\n    try {\n      const response = await fetch(\n        `http://127.0.0.1:5000/predict?longitude=${longitude}&latitude=${latitude}`,\n        {\n          method: \"GET\",\n          mode: \"cors\", // Include CORS headers\n        }\n      );\n\n      if (response.ok) {\n        const data = await response.json();\n        if (data.predicted_aqi) {\n          setPredictedAqi(data.predicted_aqi.toFixed(2));\n        } else {\n          setPredictedAqi(\"Error fetching data\");\n        }\n      } else {\n        setPredictedAqi(\"Error fetching data\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\n        \"There was an error fetching the AQI prediction. Please try again later.\"\n      );\n    }\n  };\n\n\n  return (\n    <div className=\"dashboard\">\n      {/* Sidebar */}\n      <aside className=\"sidebar\">\n        <div className=\"sidebar-logo\"> Dashboard</div>\n        <ul className=\"sidebar-links\">\n          <li>\n            <a href=\"#home\" onClick={() => navigate(\"/\")}>\n              <FontAwesomeIcon icon={faHouse} /> Home\n            </a>\n          </li>\n          <li>\n            <a href=\"#stats\">\n              <FontAwesomeIcon icon={faDesktop} /> Monitoring Environment\n            </a>\n          </li>\n          <li>\n            <a href=\"#visual-data\">\n              <FontAwesomeIcon icon={faDesktop} /> Visual Data\n            </a>\n          </li>\n          <li>\n            <a href=\"#pie-chart\">\n              <FontAwesomeIcon icon={faPieChart} /> Pie Chart\n            </a>\n          </li>\n          <li>\n            <a href=\"#bar-chart\">\n              <FontAwesomeIcon icon={faChartColumn} /> Bar Chart\n            </a>\n          </li>\n\n          <li>\n            <a href=\"#stacked-bar-chart\">\n              <FontAwesomeIcon icon={faChartBar} /> Stacked Bar\n            </a>\n          </li>\n          <li>\n            <a href=\"#gauge-chart\">\n              <FontAwesomeIcon icon={faTachometerAlt} /> Gauge Chart\n            </a>\n          </li>\n          <li>\n            <a href=\"#heat-map\">\n              <FontAwesomeIcon icon={faMapLocationDot} /> Heat Map\n            </a>\n          </li>\n          <li>\n            <a href=\"#recommendation\">\n              <FontAwesomeIcon icon={faDesktop} /> Recommendations System\n            </a>\n          </li>\n          <li>\n            <a href=\"#alerts\">\n              <FontAwesomeIcon icon={faBell} /> Managing ALerts\n            </a>\n          </li>\n          <li>\n            <a href=\"#health-impact\">\n              <FontAwesomeIcon icon={faHeartPulse} /> Health Impact\n            </a>\n          </li>\n        </ul>\n      </aside>\n\n      {/* Main Content */}\n      <main className=\"main-content\">\n        <div className=\"dropdown-container\">\n          <label htmlFor=\"locationDropdown\">Select Location: </label>\n          <select\n            id=\"locationDropdown\"\n            value={selectedLocation || \"\"}\n            onChange={handleLocationChange}\n          >\n            {locations.map((location) => (\n              <option key={location} value={location}>\n                {location}\n              </option>\n            ))}\n          </select>\n        </div>\n\n        <section className=\"stats\" id=\"stats\">\n          <h2>Monitoring Environment</h2>\n          <div className=\"info-cards-container\">\n            <div className=\"info-card\">78 Pollution</div>\n            <div className=\"info-card\">12 Health</div>\n            <div className=\"info-card\">13 Traffic Rush</div>\n            <div className=\"info-card\">1 Vehicle</div>\n          </div>\n        </section>\n\n        <section className=\"visualize\" id=\"visual-data-section\">\n          <h2>Visualize Data</h2>\n\n          {/* Pie Chart */}\n          <section id=\"pie-chart\" className=\"chart-card\">\n            <h3>Average Pollutant Distribution</h3>\n            <div className=\"chart-container\">\n              <ResponsiveContainer width=\"100%\" height={400}>\n                <PieChart>\n                  <Pie\n                    data={pieData}\n                    dataKey=\"value\"\n                    nameKey=\"name\"\n                    outerRadius={150}\n                    fill=\"#8884d8\"\n                  >\n                    {pieData.map((entry, index) => (\n                      <Cell\n                        key={index}\n                        fill={[\"#FF6384\", \"#36A2EB\", \"#FFCE56\"][index]}\n                      />\n                    ))}\n                  </Pie>\n                  <Tooltip />\n                  <Legend />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          </section>\n\n          {/* Plotly PM2.5 and PM10 Chart */}\n          <section id=\"pm25-pm10-chart\" className=\"chart-card\">\n            <h3>PM2.5 and PM10 Levels</h3>\n            <Plot\n              data={[\n                {\n                  x: chartsData.timeRange,\n                  y: chartsData.pm25Data,\n                  name: \"PM2.5\",\n                  type: \"scatter\",\n                  line: { color: \"#1f77b4\" },\n                },\n                {\n                  x: chartsData.timeRange,\n                  y: chartsData.pm10Data,\n                  name: \"PM10\",\n                  type: \"scatter\",\n                  line: { color: \"#ff7f0e\" },\n                },\n              ]}\n              layout={{\n                title: `PM2.5 and PM10 Levels`,\n                xaxis: { title: \"Date\" },\n                yaxis: { title: \"Concentration (μg/m³)\" },\n                margin: { t: 50, l: 50, r: 50, b: 50 },\n              }}\n            />\n          </section>\n\n          {/* Plotly CO2 Levels Chart */}\n          <section id=\"co2-chart\" className=\"chart-card\">\n            <h3>CO2 Levels</h3>\n            <Plot\n              data={[\n                {\n                  x: chartsData.timeRange,\n                  y: chartsData.co2Data,\n                  type: \"scatter\",\n                  line: { color: \"#2ca02c\" },\n                },\n              ]}\n              layout={{\n                title: `CO2 Levels`,\n                xaxis: { title: \"Date\" },\n                yaxis: { title: \"CO2 Concentration (ppm)\" },\n                margin: { t: 50, l: 50, r: 50, b: 50 },\n              }}\n            />\n          </section>\n\n          {/* Plotly Temperature & Humidity Chart */}\n          <section id=\"temperature-humidity-chart\" className=\"chart-card\">\n            <h3>Temperature & Humidity</h3>\n            <Plot\n              data={[\n                {\n                  x: chartsData.timeRange,\n                  y: chartsData.tempData,\n                  type: \"scatter\",\n                  name: \"Temperature\",\n                  line: { color: \"#d62728\" },\n                },\n                {\n                  x: chartsData.timeRange,\n                  y: chartsData.humidData,\n                  type: \"scatter\",\n                  name: \"Humidity\",\n                  line: { color: \"#9467bd\" },\n                },\n              ]}\n              layout={{\n                title: \"Temperature & Humidity\",\n                xaxis: { title: \"Date\" },\n                yaxis: { title: \"Temperature (°C)\" },\n                yaxis2: {\n                  title: \"Humidity (%)\",\n                  overlaying: \"y\",\n                  side: \"right\",\n                },\n                margin: { t: 50, l: 50, r: 50, b: 50 },\n              }}\n            />\n          </section>\n\n          {/* Bar Chart */}\n          <section id=\"bar-chart\" className=\"chart-card\">\n            <h3>Pollutant Levels on the Last Day</h3>\n            <div className=\"chart-container\">\n              <ResponsiveContainer width=\"100%\" height={400}>\n                <BarChart data={barData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Bar dataKey=\"value\" fill=\"#82ca9d\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </section>\n\n          {/* Stacked Bar Chart */}\n          <section id=\"stacked-bar-chart\" className=\"chart-card\">\n            <h3>Pollutants Over Time</h3>\n            <div className=\"chart-container\">\n              <ResponsiveContainer width=\"100%\" height={400}>\n                <BarChart data={stackedBarData} stackOffset=\"sign\">\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis dataKey=\"name\" />\n                  <YAxis />\n                  <Tooltip />\n                  <Legend />\n                  <Bar dataKey=\"PM25\" stackId=\"a\" fill=\"#8884d8\" />\n                  <Bar dataKey=\"PM10\" stackId=\"a\" fill=\"#FFCE56\" />\n                  <Bar dataKey=\"CO2\" stackId=\"a\" fill=\"#82ca9d\" />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </section>\n\n          {/* Gauge Chart */}\n          <section id=\"gauge-chart\" className=\"chart-card\">\n            <h3>Air Quality Index (Latest)</h3>\n            <div className=\"chart-container\">\n              <GaugeChart\n                id=\"gauge-chart\"\n                nrOfLevels={20}\n                colors={[\"#4CAF50\", \"#FFCE56\", \"#FF5733\", \"#C70039\"]}\n                arcWidth={0.3}\n                percent={gaugeValue}\n                textColor=\"#000\"\n                needleColor=\"#000\"\n              />\n              <div\n                style={{\n                  textAlign: \"center\",\n                  marginTop: \"10px\",\n                  fontSize: \"1.2rem\",\n                }}\n              >\n                AQI: {latestAQI}\n              </div>\n            </div>\n          </section>\n\n          {/* Heat Map (Placeholder with ComposedChart) */}\n          <section id=\"heat-map\" className=\"chart-card\">\n            <h3>Heat Map</h3>\n            <div className=\"chart-container\">\n              <HeatMap />\n            </div>\n          </section>\n        </section>\n\n        <section className=\"Recommendations-system\" id=\"recommendation\">\n          <h2>Recommendations System </h2>\n          <div className=\"Prediction\" id=\"Prediction\">\n            <h1>Air Quality Index (AQI) Prediction</h1>\n            <form onSubmit={handleSubmit}>\n              <label htmlFor=\"longitude\">Longitude:</label>\n              <input\n                type=\"number\"\n                step=\"any\"\n                id=\"longitude\"\n                value={longitude}\n                onChange={(e) => setLongitude(e.target.value)}\n                placeholder=\"Enter Longitude\"\n                required\n              />\n\n              <label htmlFor=\"latitude\">Latitude:</label>\n              <input\n                type=\"number\"\n                step=\"any\"\n                id=\"latitude\"\n                value={latitude}\n                onChange={(e) => setLatitude(e.target.value)}\n                placeholder=\"Enter Latitude\"\n                required\n              />\n\n              <button type=\"submit\">Get AQI</button>\n            </form>\n\n            <div id=\"result\">\n              <h3>\n                Predicted AQI: <span>{predictedAqi}</span>\n              </h3>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"custom-alerts\" id=\"alerts\">\n          <h2>Custom Alerts</h2>\n\n          {/* Alert Form */}\n          <div className=\"add-alert-form\">\n            <form onSubmit={handleAddAlert}>\n              <input\n                type=\"text\"\n                value={alertName}\n                onChange={(e) => setAlertName(e.target.value)}\n                placeholder=\"Enter Alert Name\"\n                required\n              />\n              <select\n                value={alertFrequency}\n                onChange={(e) => setAlertFrequency(e.target.value)}\n              >\n                <option value=\"Daily\">Daily</option>\n                <option value=\"Weekly\">Weekly</option>\n                <option value=\"Monthly\">Monthly</option>\n              </select>\n              <input\n                type=\"datetime-local\"\n                value={alertTime}\n                onChange={(e) => setAlertTime(e.target.value)}\n                required\n              />\n              <button type=\"submit\">Add Alert</button>\n            </form>\n          </div>\n\n          {/* Display List of Alerts */}\n          <div className=\"alert-list\">\n            {alerts.map((alert) => (\n              <div key={alert.id} className=\"alert-item\">\n                <div>\n                  <strong>{alert.name}</strong> - {alert.frequency} -{\" \"}\n                  {new Date(alert.time).toLocaleString()}\n                </div>\n                <button onClick={() => handleRemoveAlert(alert.id)}>\n                  Remove\n                </button>\n              </div>\n            ))}\n          </div>\n          {/* Pollution Level Alert */}\n          {pollutionAlert && <div className=\"alert-item\">{pollutionAlert}</div>}\n        </section>\n\n        <section className=\"health-impact\" id=\"health-impact\">\n     <h2>Health Impact Forecasting</h2>\n      <div className=\"forecast-grid\">\n        {/* Pollution Alert Card */}\n        <div className=\"advice-card alert-card\">\n          <div className=\"advice-card-icon\">\n            <i className=\"fas fa-exclamation-triangle\"></i>\n          </div>\n          <h3>Pollution Alert</h3>\n          <p>{pollutionAlert || \"Pollution levels are normal.\"}</p>\n        </div>\n\n        {/* Health Advice Card */}\n        <div className=\"advice-card health-advice-card\">\n          <div className=\"advice-card-icon\">\n            <i className=\"fas fa-mask\"></i>\n          </div>\n          <h3>Health Advice</h3>\n          <p>{healthAdvice || \"No health concerns at the moment.\"}</p>\n        </div>\n\n        {/* Pollution Meter Card */}\n        <div className=\"pollution-meter\">\n          <h3>Pollution Index Meter</h3>\n          <div className=\"meter-container\">\n            <div className=\"meter\">\n              <div\n                className=\"meter-fill\"\n                style={{\n                  width: '${(pollutionData ? Math.max(pollutionData.pm25, pollutionData.pm10, pollutionData.co2) / 500) * 100 : 0}%',\n                }}\n              ></div>\n            </div>\n          </div>\n          <p>\n            Current pollution level is at {pollutionData ? Math.max(pollutionData.pm25, pollutionData.pm10, pollutionData.co2).toFixed(2) : \"N/A\"}\n          </p>\n        </div>\n\n        {/* Forecast Timeline Card */}\n        <div className=\"forecast-timeline\">\n          <h3>Forecast Timeline</h3>\n          <p>Air quality expected to improve in 3 hours.</p>\n        </div>\n\n        {/* Plan Your Day Feature */}\n        <div className=\"plan-day\">\n          <h3>Plan Your Day</h3>\n          <p>It’s a good day for indoor activities. Avoid outdoor activities until air quality improves.</p>\n        </div>\n      </div>\n        </section>\n      </main>\n\n      {/* Notifications Section */}\n      <section className=\"notifications\">\n        <h3>Recent Notifications</h3>\n        <div className=\"notification-grid\">\n          <div className=\"notification-card\">\n            New Health Alert in your area!\n          </div>\n          <div className=\"notification-card\">\n            Traffic levels are high this morning.\n          </div>\n          <div className=\"notification-card\">\n            New air quality forecast is available.\n          </div>\n          <div className=\"notification-card\">\n            Reminder: Update your custom alerts.\n          </div>\n        </div>\n      </section>\n    </div>\n  );\n}\n\nexport default Dashboard;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}